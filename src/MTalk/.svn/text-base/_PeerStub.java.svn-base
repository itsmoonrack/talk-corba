package MTalk;


/**
* MTalk/_PeerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from talk.idl
* mardi 4 janvier 2011 17 h 51 CET
*/

public class _PeerStub extends org.omg.CORBA.portable.ObjectImpl implements MTalk.Peer
{

  public String getInformations ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getInformations", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getInformations (        );
            } finally {
                _releaseReply ($in);
            }
  } // getInformations


  /**
  		 * @param numConvSideA : le num√©ro que l'appelant donne √† la conversation vue de son c√}t√©.
  		 * @param subject : sujet de la conversation
  		 * @param myInformations : informations de l'appelant (username ou autre)
  		 * @param mytalkIor : Ior du talk que l'appelant cr√©e pour la conversation (de son c√}t√© donc)
  		 **/
  public void requestTalk (short numConvSideA, String subject, String myInformations, String mytalkIor)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("requestTalk", false);
                $out.write_ushort (numConvSideA);
                $out.write_string (subject);
                $out.write_string (myInformations);
                $out.write_string (mytalkIor);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                requestTalk (numConvSideA, subject, myInformations, mytalkIor        );
            } finally {
                _releaseReply ($in);
            }
  } // requestTalk

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:MTalk/Peer:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _PeerStub
