/**
 * Master II ALMA
 * IDL CORBA TALK
 * Version 1.0 du 04/01/2011
 */

module MTalk {
   interface Peer {
      string getInformations();
		/**
		 * @param numConvSideA : le numéro que l'appelant donne à la conversation vue de son côté.
		 * @param subject : sujet de la conversation
		 * @param myInformations : informations de l'appelant (username ou autre)
		 * @param mytalkIor : Ior du talk que l'appelant crée pour la conversation (de son côté donc)
		 **/
      oneway void requestTalk(in unsigned short numConvSideA, in string subject, in string myInformations, in string mytalkIor);
   };

   interface Talk {
		/**
		 * @param numConvSideB : numéro que l'appelant donne à la conversation vue de son côté
		 * @param numConvSideA : numéro que l'appelé a donné à la conversation vue de son côté, lors de l'appel à requestTalk
		 * @param talkIor : Ior de l'objet talk créé par l'appelant pour gérer cette discussion
		 *
		 **/
      oneway void accept(in unsigned short numConvSideB, in unsigned short numConvSideA, in string talkIor);
		/**
		 * @param numConvSideA : numéro que l'appelé a donné à la conversation vue de son côté, lors de l'appel à requestTalk
		 **/
      void deny(in unsigned short numConvSideA);
		/**
		 * @param numConvYourSide : numéro identifiant la conversation du côté de l'appelé.
		 * 							C'est à dire : je t'envoie un message sur la conversation
		 * 							à laquelle tu as donné le numéro numConvYourSide.
		 * @param message : message envoyé de l'appelant à l'appelé. A priori, à afficher à l'utilisateur.
		 **/
      void talk(in unsigned short numConvYourSide, in string message);

		/**
		 * @param numConvYourSide : numéro de la conversation vue du côté de l'appelé
		 **/
      oneway void stop(in unsigned short numConvYourSide);
   };

};
